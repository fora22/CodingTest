'''
온라인으로 시험을 보는 프로그래밍 학원이 있습니다. 모든 시험 문제는 프로그램에 의해 자동으로 채점되며, 부분점수가 부여됩니다. 채점은 답안 제출과 동시에 실시간으로 이루어지며, 채점 로그가 시험 관리자에게 전달됩니다. 관리자는 시험이 모두 끝난 후 채점 로그를 통해 부정행위자로 의심되는 사람들을 찾아내려고 합니다. 이를 위해 다음과 같은 조건을 정했습니다.

1. 두 수험자가 푼 문제 수가 같다. 단, 푼 문제 수가 5 미만인 경우는 제외한다.
2. 두 수험자가 푼 문제의 번호가 모두 같다.
3. 두 수험자가 푼 문제의 점수가 모두 같다.
임의의 두 수험자가 위 3가지 조건에 모두 부합하는 경우, 두 수험자를 부정행위자로 의심합니다.

수험자의 수험번호, 문제 번호, 받은 점수를 나타내는 문자열 배열 logs가 매개변수로 주어집니다. 위 조건에 해당하는 모든 부정행위 의심자의 수험번호를 배열에 담아 사전 순으로 정렬하여 return 하도록 solution 함수를 완성해주세요. 단, 부정행위자로 의심되는 수험자가 없는 경우에는 문자열 "None"을 배열에 담아 return 해주세요.
'''
def solution(logs):
    scores = [{} for _ in range(10000)]
    answer = []

    for log in logs:
        temp = log.split()
        examCode = int(temp[0])     # 수험번호
        examNum = int(temp[1])      # 문제번호
        examScore = int(temp[2])    # 문제점수

        scores[examCode][examNum] = examScore   # [{}, {번호: 점수}, ... ]
        
    checkCheat = [(i, x) for i, x in enumerate(scores) if len(x) >= 5]
    for i in range(len(checkCheat)):
        for j in range(i+1, len(checkCheat)):
            isCheat = (checkCheat[i][1] == checkCheat[j][1])    # 두 수험자가 푼 문제의 번호, 점수가 같으면 True
            if isCheat:                                         # 부정행위 검거
                answer.append(checkCheat[i][0])
                answer.append(checkCheat[j][0])

    if answer:
        answer = [str(x).zfill(4) for x in answer]      # 4자리 문자열로 변경
        answer = sorted(list(set(answer)))              # 3명 이상의 수험자가 푼 문제의 번호, 점수가 같을 경우를 대비해 중복 제거
    else:
        answer.append("None")
    
    return answer


l = [
    ["0001 3 95", "0001 5 90", "0001 5 100", "0002 3 95", "0001 7 80", "0001 8 80", "0001 10 90", "0002 10 90", "0002 7 80", "0002 8 80", "0002 5 100", "0003 99 90"],
    ["1901 1 100", "1901 2 100", "1901 4 100", "1901 7 100", "1901 8 100", "1902 2 100", "1902 1 100", "1902 7 100", "1902 4 100", "1902 8 100", "1903 8 100", "1903 7 100", "1903 4 100", "1903 2 100", "1903 1 100", "1101 1 95", "1101 2 100", "1101 4 100", "1101 7 100", "1101 9 100", "1102 1 95", "1102 2 100", "1102 4 100", "1102 7 100", "1102 9 100"],
    ["1901 10 50", "1909 10 50"],
    ["0001 1 0", "0001 2 0", "0001 3 0", "0001 4 0", "0001 5 0", "0456 1 0", "0456 2 0", "0456 3 0", "0456 4 0", "0456 5 0"]
]

for i in range(len(l)):
    print(solution(l[i]))